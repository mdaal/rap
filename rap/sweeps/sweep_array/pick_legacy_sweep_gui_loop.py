import numpy as np

def pick_legacy_sweep_gui_loop(metadata, loop,Sweep_Array,index_tuple):
	'''When Sweep_Array is generated by load_legacy_sweep_gui_data, 
	this function can be used to select the current loop/transmission data from withing the Sweep_Array.
	index_tuple follows legacy gui matlab file nameing convention... 

			i.e.  specXX-YY-ZZ.mat has data for resonator pair i = 0 or 1.
			XX is the Temp in milliKelvin
			YY is group number of the pair
			ZZ is the attenuator setting going toward the cryostat
			----> index_tuple = (XX, YY, ZZ, i) and i is 0 or 1

			issue the command obj.pick_legacy_sweep_gui_loop( (XX, YY, ZZ, i) ) to load that loop.'''

	if len(index_tuple) is not 4:
		raise ValueError('index_tuple is length {}. length 4 expected.'.format(len(index_tuple)) )
	
	#add code to check that Sweep_Array was generated by load_legacy_sweep_gui_data and error if not
	index = np.where((np.float(index_tuple[0]) ==Sweep_Array["Temperature"]/0.001) & (Sweep_Array["Resonator_Group"][:,0] == np.float(index_tuple[1])) & (np.float(index_tuple[2]) == Sweep_Array["Noise_Chan_Input_Atn"]))[0] 
	if index.size is not 2:
		raise ValueError('Did not find resonator pair')
	else:
	 index = index[index_tuple[3]]

	freq, z = metadata.Loop_Data_Column_Names

	loop.index = index 
	#self.loop.normalization = None
	loop.z = Sweep_Array[index][z]
	loop.freq = Sweep_Array[index][freq]